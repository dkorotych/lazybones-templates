buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'http://dl.bintray.com/pledbrook/plugins' }
    }

    dependencies {
        classpath 'uk.co.cacoethes:lazybones-gradle:1.2.4'
    }
}

plugins {
    id 'net.researchgate.release' version '2.3.5'
    id "com.github.dkorotych.gradle-maven-exec" version "0.2"
}

apply plugin: 'uk.co.cacoethes.lazybones-templates'
apply from: "$rootDir/gradle/lazybones/lazybones.gradle"
apply from: "$rootDir/gradle/functional-test.gradle"

afterReleaseBuild.dependsOn publishAllTemplates

release {
    tagTemplate = 'v${version}'
    buildTasks = ['check', 'packageAllTemplates']
}

lazybones {
    repositoryName = "dkorotych/lazybones-templates"
    licenses = ["Apache-2.0"]
    vcsUrl = "https://github.com/dkorotych/lazybones-templates"
    if (project.hasProperty("bintrayUsername") && project.hasProperty("bintrayApiKey")) {
        repositoryUsername = project.bintrayUsername
        repositoryApiKey = project.bintrayApiKey
    }

    template "maven-quickstart" includes "logback-support"
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}

functionalTest.dependsOn buildImages, installAllTemplates

ext {
    lastMavenQuickstartTemplateVersion = file('templates/maven-quickstart/VERSION').text.trim()
    javaVersion = System.getProperty('java.version').replaceFirst(/^1\.(\d+).+$/, '$1')
}

def testTemplateMavenQuickstartByLazybonesPrefix = 'testTemplateMavenQuickstartByLazybones'
tasks.addRule("Pattern: ${testTemplateMavenQuickstartByLazybonesPrefix}<version> " +
        "(where version is ${supportedLazybonesVersions}) - Create application by 'MavenQuickstart' template" +
        " and validate it") {
    String taskName ->
        if (taskName.startsWith(testTemplateMavenQuickstartByLazybonesPrefix)) {
            def lazybonesVersion = taskName - testTemplateMavenQuickstartByLazybonesPrefix

            task("createMavenApplicationByLazybones${lazybonesVersion}",
                    dependsOn: ['installTemplateMavenQuickstart', "buildImage${javaVersion}-${lazybonesVersion}"]) {
                group = 'verification'
                description = "Create application by 'MavenQuickstart' template by Lazybones ${lazybonesVersion}"
                doLast {
                    def task = tasks[taskName]
                    task.workingDir = createMavenApplication(javaVersion, lazybonesVersion, lastMavenQuickstartTemplateVersion)
                    task.options {
                        threads = '1C'
                        batchMode = true
                    }
                    task.goals = [
                            'package',
                            'site'
                    ]
                }
            }

            task(taskName, type: MavenExec, dependsOn: "createMavenApplicationByLazybones${lazybonesVersion}") {
                group = 'verification'
                description = "Validate application, created by 'MavenQuickstart' template by Lazybones" +
                        " ${lazybonesVersion}"
            }
        }
}

task testTemplateMavenQuickstart {
    group = 'verification'
    description = 'Create application by "MavenQuickstart" template by all supported Lazybones versions and validate it'
}
supportedLazybonesVersions.each { version ->
    testTemplateMavenQuickstart.dependsOn << "${testTemplateMavenQuickstartByLazybonesPrefix}${version}"
}

File createMavenApplication(String javaVersion, String lazybonesVersion, String templateVersion,
                            Map<String, String> properties = [:]) {
    List<String> commands = ['create', "https://dl.bintray.com/${lazybones.repositoryName}/maven-quickstart-template-"
                             + "${templateVersion}.zip".toString(), '.']
    properties?.each {
        commands << "-P${it.key}=${it.value}".toString()
    }
    return executeLazybones(javaVersion, lazybonesVersion, commands)
}
